<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!--
	프로퍼티 이름을 이용한 의존 관계 자동 설정 
	프로퍼티명과 빈의 이름이 같으면 자동으로 의존 관계 설정
-->
	<bean name="writeArticleService" class="kr.spring.ch13.WriteArticleService" autowire="byName"/>
	<bean name="writeArticleDAO" class="kr.spring.ch13.WriteArticleDAO"/>
	
	
<!-- 
	프로퍼티 타입을 이용한 의존 관계 자동 설정
 -->
	<bean name="systemMonitor" class="kr.spring.ch14.SystemMonitor" autowire="byType"/>
	<bean name="phoneCall" class="kr.spring.ch14.PhoneCall"/>
	<!-- 동일한 타입의 객체가 존재할 경우 오류 발생 -->
	<!--
	<bean name="phoneCall2" class="kr.spring.ch14.PhoneCall"/>
	-->
	
	
	<!-- 서로 다른 범위 빈에 대한 의존 처리 -->
	<!-- 싱글턴 -->
	<bean id="executor" class="kr.spring.ch15.Executor">
		<property name="worker" ref="workerBean"></property>
	</bean>
	<!-- 프로토타입, 호출할 때 마다 객체가 달라짐 -->
	<bean id="workerBean" class="kr.spring.ch15.Worker" scope="prototype">
		<!-- 프로토타입 사용을 위해 필요 -->
	<!-- 
		위에 Executor클래스는 전달받은 Worker객체가 prototype범위의 빈 객체임에도 불구하고,
		매번 새로운 Worker객체를 사용하는 것이 아니라 한 개의 Worker객체만 사용하게 됨.
		따라서 prototype범위의 빈 객체가 singleton범위의 빈 객체로부터 참조 되는 경우,
		<aop:scoped-proxy/>태그를 이용하면 올바르게 범위를 적용할 수 있음
	 -->
		<aop:scoped-proxy/>
	</bean>
	
</beans>